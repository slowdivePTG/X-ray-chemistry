
!###################################################
! WARNING:This is a test auto-generated by KROME, in order to
! show a bare-minimal code to call the KROME's subroutine.
! Most of the values could not be appropriate for your
! problem, since this test is only intended as a general
! purpose example.

program test_krome

  use krome_main
  use krome_user
  use krome_user_commons
  use krome_ode

  implicit none

  integer,parameter::nx=krome_nmols
  real*8::x(nx),Tgas,t,dt,spy,xH,j21xs,dust2gas

  spy = 3600. * 24. * 365. !seconds per year
  Tgas = 1d1 !gas temperature (K)
  xH = 2d4 !Hydrogen density

  !user commons for opacity and CR rate
  !call krome_set_user_av(1d1) !opacity Av (#)E11.3,
  !call krome_set_user_crate(1.3d-17) !CR rate (1/s)
  !call krome_set_user_gas_dust_ratio(7.57d11) !gas/dust
  !Second run:j21xs=1d-1
  call krome_init()
  !j21xs = 0d0
  !call krome_set_J21xray(j21xs)
  !print *,"J21 Xray = ",j21xs

  dust2gas=1d0/(7.57d1)
  !call krome_init_dust_distribution(x(:), dust2gas)
  !call krome_set_Tdust(Tgas)
  x(:) = 1.d-20
  !initial densities (model EA2 Wakelam+Herbst 2008)
  x(KROME_idx_H)     = 1d0 * xH  !H
  x(KROME_idx_Hj)    = 1d-4 * xH   !H+
  x(KROME_idx_H2)    = 1d-5 *xH   !H2
  x(KROME_idx_C)     = 1d-4 *xH    !C
  x(KROME_idx_Si)    = 1d-4 *xH    !Si

  !calculate elctrons (neutral cloud)
  x(KROME_idx_e) = krome_get_electrons(x(:))

  !NOTE: here myCoe array is employed to store the
  ! coefficient values, since the temperature is
  ! constant during the model evolution.
  ! myCoe(:) is defined in krome_user_commons
  !myCoe(:) = krome_get_coef(Tgas,x(:))

  dt = 1d2*spy !time-step (s)
  t = 0d0 !initial time (s)

  !output header
  open(unit=77, file='/home/chang/krome/build/data/test_dust2')
  write(77,'(a)') "#time "//trim(krome_get_names_header())

  do
     print '(a10,E11.3,a3)',"time:",t/spy,"yr"
     call krome(x(:),Tgas,dt) !call KROME
     !call jex(nx,t,x(:),1)
     t = t + dt !increase time
     dt = max(1d2,t/5d0) !increase time-step
     write(77,'(999E12.3)') t/spy,x(:)/2d4
     if(t>5d6*spy) exit !exit when overshoot 5d6 years
  end do
end program test_krome
